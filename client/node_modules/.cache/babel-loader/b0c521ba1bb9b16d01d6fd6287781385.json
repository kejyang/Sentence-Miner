{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyang\\\\OneDrive\\\\Documents\\\\test\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\sentencePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.originalSentence\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n_c = Record;\nexport default function SentencePage() {\n  _s();\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [form, setForm] = useState({\n    originalSentence: \"\",\n    transSentence: \"\",\n    words: \"\"\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n  function handleOnClick() {\n    setShowAnswer(!showAnswer);\n  }\n  ;\n  function sentence() {\n    return /*#__PURE__*/_jsxDEV(Record, {\n      record: form\n    }, form._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sentence(), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleOnClick,\n      children: showAnswer ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Answer: The capital of France is Paris.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Question: What is the capital of France?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(SentencePage, \"LEe17uHdDotL8rkAiNYa9l4v4zU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = SentencePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"SentencePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Link","Record","props","record","originalSentence","SentencePage","showAnswer","setShowAnswer","form","setForm","transSentence","words","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","json","handleOnClick","sentence","_id"],"sources":["C:/Users/kyang/OneDrive/Documents/test/mern-stack-example/mern/client/src/components/sentencePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Record = (props) => (\r\n    <tr>\r\n      <td>{props.record.originalSentence}</td>\r\n    </tr> \r\n  );\r\n\r\nexport default function SentencePage() {\r\n\r\n    const [showAnswer, setShowAnswer] = useState(false);\r\n\r\n    const [form, setForm] = useState({\r\n        originalSentence: \"\",\r\n        transSentence: \"\",\r\n        words: \"\",\r\n      });\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n\r\n      useEffect(() => {\r\n        async function fetchData() {\r\n          const id = params.id.toString();\r\n          const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\r\n    \r\n          if (!response.ok) {\r\n            const message = `An error has occured: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n          }\r\n    \r\n          const record = await response.json();\r\n          if (!record) {\r\n            window.alert(`Record with id ${id} not found`);\r\n            navigate(\"/\");\r\n            return;\r\n          }\r\n    \r\n          setForm(record);\r\n        }\r\n    \r\n        fetchData();\r\n    \r\n        return;\r\n      }, [params.id, navigate]);\r\n\r\n      function handleOnClick() {\r\n        setShowAnswer(!showAnswer);\r\n      };\r\n\r\n      function sentence() {\r\n        return (\r\n            <Record\r\n                record={form}\r\n                key={form._id}\r\n            />\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {sentence()}\r\n          <div onClick={handleOnClick}>\r\n            {showAnswer ? (\r\n              <p>Answer: The capital of France is Paris.</p>\r\n            ) : (\r\n              <p>Question: What is the capital of France?</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n      );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,MAAM,GAAIC,KAAK,iBACjB;EAAA,uBACE;IAAA,UAAKA,KAAK,CAACC,MAAM,CAACC;EAAgB;IAAA;IAAA;IAAA;EAAA;AAAM;EAAA;EAAA;EAAA;AAAA,QAE3C;AAAC,KAJEH,MAAM;AAMZ,eAAe,SAASI,YAAY,GAAG;EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IAC7BQ,gBAAgB,EAAE,EAAE;IACpBM,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE;EACT,CAAC,CAAC;EACJ,MAAMC,MAAM,GAAGd,SAAS,EAAE;EAC1B,MAAMe,QAAQ,GAAGd,WAAW,EAAE;EAE5BF,SAAS,CAAC,MAAM;IACd,eAAeiB,SAAS,GAAG;MACzB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAG,EAAC,CAAC;MAEpF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,yBAAwBH,QAAQ,CAACI,UAAW,EAAC;QAC9DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMjB,MAAM,GAAG,MAAMc,QAAQ,CAACO,IAAI,EAAE;MACpC,IAAI,CAACrB,MAAM,EAAE;QACXmB,MAAM,CAACC,KAAK,CAAE,kBAAiBR,EAAG,YAAW,CAAC;QAC9CF,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;MAEAJ,OAAO,CAACN,MAAM,CAAC;IACjB;IAEAW,SAAS,EAAE;IAEX;EACF,CAAC,EAAE,CAACF,MAAM,CAACG,EAAE,EAAEF,QAAQ,CAAC,CAAC;EAEzB,SAASY,aAAa,GAAG;IACvBlB,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B;EAAC;EAED,SAASoB,QAAQ,GAAG;IAClB,oBACI,QAAC,MAAM;MACH,MAAM,EAAElB;IAAK,GACRA,IAAI,CAACmB,GAAG;MAAA;MAAA;MAAA;IAAA,QACf;EAER;EAEA,oBACE;IAAA,WACGD,QAAQ,EAAE,eACX;MAAK,OAAO,EAAED,aAAc;MAAA,UACzBnB,UAAU,gBACT;QAAA,UAAG;MAAuC;QAAA;QAAA;QAAA;MAAA,QAAI,gBAE9C;QAAA,UAAG;MAAwC;QAAA;QAAA;QAAA;MAAA;IAC5C;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAGd;AAAC,GAhEuBD,YAAY;EAAA,QASjBP,SAAS,EACPC,WAAW;AAAA;AAAA,MAVRM,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}