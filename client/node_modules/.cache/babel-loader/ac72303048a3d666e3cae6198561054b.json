{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyang\\\\OneDrive\\\\Documents\\\\test\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\sentenceList.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      className: \"link-dark\",\n      to: `/sentencePage/${props.record._id}`,\n      children: props.record.originalSentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Record;\nexport default function SentenceList(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  }\n  async function Search(term) {\n    _s();\n    useEffect(() => {\n      async function getRecords() {\n        const response = await fetch(`http://localhost:5000/record/`);\n        if (!response.ok) {\n          const message = `An error occured: ${response.statusText}`;\n          window.alert(message);\n          return;\n        }\n        const records = await response.json();\n        var newRecords;\n        for (let i = 0; i < records.length; i++) {\n          if (records[i].includes(term)) {\n            newRecords.push(records[i]);\n          }\n        }\n        setRecords(newRecords);\n      }\n      getRecords();\n      return;\n    });\n  }\n\n  // This method will map out the records on the table\n  _s(Search, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  function sentenceList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Original Sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sentenceList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s2(SentenceList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = SentenceList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"SentenceList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Record","props","record","_id","originalSentence","deleteRecord","SentenceList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","Search","term","i","includes","push","sentenceList","map","marginTop"],"sources":["C:/Users/kyang/OneDrive/Documents/test/mern-stack-example/mern/client/src/components/sentenceList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>\r\n    <Link className=\"link-dark\" to={`/sentencePage/${props.record._id}`}>{props.record.originalSentence}</Link>\r\n    </td>\r\n    <td>\r\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n      <button className=\"btn btn-link\"\r\n        onClick={() => {\r\n          props.deleteRecord(props.record._id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default function SentenceList(props) {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occured: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const records = await response.json();\r\n      setRecords(records);\r\n    }\r\n\r\n    getRecords();\r\n\r\n    return; \r\n  }, [records.length]);\r\n\r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    await fetch(`http://localhost:5000/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n\r\n    const newRecords = records.filter((el) => el._id !== id);\r\n    setRecords(newRecords);\r\n  }\r\n\r\n  async function Search(term){\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n          const response = await fetch(`http://localhost:5000/record/`);\r\n    \r\n          if (!response.ok) {\r\n            const message = `An error occured: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n          }\r\n          const records = await response.json();\r\n          var newRecords;\r\n          for (let i = 0; i < records.length; i++) {\r\n            if (records[i].includes(term)){\r\n                newRecords.push(records[i]);\r\n            }\r\n          }\r\n          setRecords(newRecords);\r\n        }\r\n        getRecords();\r\n        return; \r\n    });\r\n}\r\n\r\n  // This method will map out the records on the table\r\n  function sentenceList() {\r\n    return records.map((record) => {\r\n      return (\r\n        <Record\r\n          record={record}\r\n          deleteRecord={() => deleteRecord(record._id)}\r\n          key={record._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  // This following section will display the table with the records of individuals.\r\n  return (\r\n    <div>\r\n      <h3>Record List</h3>\r\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Original Sentence</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{sentenceList()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}