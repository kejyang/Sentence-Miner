{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyang\\\\OneDrive\\\\Documents\\\\sentenceMiner\\\\client\\\\src\\\\components\\\\edit2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    originalSentence: \"\",\n    transSentence: \"\",\n    words: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedSentence = {\n      originalSentence: form.originalSentence,\n      transSentence: form.transSentence,\n      words: form.words\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedSentence),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Sentence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"originalSentence\",\n          children: \"Original Sentence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"originalSentence\",\n          value: form.originalSentence,\n          onChange: e => updateForm({\n            originalSentence: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transSentence\",\n          children: \"Translated Sentence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"transSentence\",\n          value: form.transSentence,\n          onChange: e => updateForm({\n            transSentence: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"words\",\n          children: \"Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"transSentence\",\n          value: form.word,\n          onChange: e => updateForm({\n            word: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update sentence\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"roj7wk2jsAHcPF6g0iD0n2KlrXE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Edit","form","setForm","originalSentence","transSentence","words","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedSentence","method","body","JSON","stringify","headers","target","word"],"sources":["C:/Users/kyang/OneDrive/Documents/sentenceMiner/client/src/components/edit2.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\n\r\nexport default function Edit() {\r\n  const [form, setForm] = useState({\r\n    originalSentence: \"\",\r\n    transSentence: \"\",\r\n    words: \"\",\r\n    records: [],\r\n  });\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occured: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const record = await response.json();\r\n      if (!record) {\r\n        window.alert(`Record with id ${id} not found`);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      setForm(record);\r\n    }\r\n\r\n    fetchData();\r\n\r\n    return;\r\n  }, [params.id, navigate]);\r\n\r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    const editedSentence = {\r\n      originalSentence: form.originalSentence,\r\n      transSentence: form.transSentence,\r\n      words: form.words,\r\n    };\r\n\r\n    // This will send a post request to update the data in the database.\r\n    await fetch(`http://localhost:5000/update/${params.id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(editedSentence),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    });\r\n\r\n    navigate(\"/\");\r\n  }\r\n\r\n  // This following section will display the form that takes input from the user to update the data.\r\n  return (\r\n    <div>\r\n      <h3>Update Sentence</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"originalSentence\">Original Sentence</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"originalSentence\"\r\n            value={form.originalSentence}\r\n            onChange={(e) => updateForm({ originalSentence: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"transSentence\">Translated Sentence</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"transSentence\"\r\n            value={form.transSentence}\r\n            onChange={(e) => updateForm({ transSentence: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"words\">Words</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"transSentence\"\r\n            value={form.word}\r\n            onChange={(e) => updateForm({ word: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update sentence\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}