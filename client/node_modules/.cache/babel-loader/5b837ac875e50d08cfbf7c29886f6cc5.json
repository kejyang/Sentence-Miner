{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyang\\\\OneDrive\\\\Documents\\\\test\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport SentenceList from \"./sentenceList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      className: \"link-dark\",\n      to: `/sentencePage/${props.record._id}`,\n      children: props.record.originalSentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n_c = Record;\nexport default function Search(_ref) {\n  _s();\n  let {\n    query\n  } = _ref;\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      var newRecords;\n      for (let i = 0; i < records.length; i++) {\n        if (records[i].includes(term)) {\n          newRecords = records[i];\n        }\n      }\n      setRecords(newRecords);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  }\n  function sentenceList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Original Sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sentenceList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = Search;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","SentenceList","Record","props","record","_id","originalSentence","deleteRecord","Search","query","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","newRecords","i","length","includes","term","id","method","filter","el","sentenceList","map","marginTop"],"sources":["C:/Users/kyang/OneDrive/Documents/test/mern-stack-example/mern/client/src/components/search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport SentenceList from \"./sentenceList\";\r\n\r\n\r\nconst Record = (props) => (\r\n    <tr>\r\n      <td>\r\n      <Link className=\"link-dark\" to={`/sentencePage/${props.record._id}`}>{props.record.originalSentence}</Link>\r\n      </td>\r\n      <td>\r\n        <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n        <button className=\"btn btn-link\"\r\n          onClick={() => {\r\n            props.deleteRecord(props.record._id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n);\r\n\r\nexport default function Search({query}){\r\n    const [records, setRecords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n          const response = await fetch(`http://localhost:5000/record/`);\r\n    \r\n          if (!response.ok) {\r\n            const message = `An error occured: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n          }\r\n    \r\n          const records = await response.json();\r\n          var newRecords;\r\n          for (let i = 0; i < records.length; i++) {\r\n            if (records[i].includes(term)){\r\n                newRecords = records[i];\r\n            }\r\n          }\r\n          setRecords(newRecords);\r\n        }\r\n    \r\n        getRecords();\r\n    \r\n        return; \r\n      }, [records.length]);\r\n\r\n      async function deleteRecord(id) {\r\n        await fetch(`http://localhost:5000/${id}`, {\r\n          method: \"DELETE\"\r\n        });\r\n    \r\n        const newRecords = records.filter((el) => el._id !== id);\r\n        setRecords(newRecords);\r\n      }\r\n\r\n      function sentenceList() {\r\n        return records.map((record) => {\r\n          return (\r\n            <Record\r\n              record={record}\r\n              deleteRecord={() => deleteRecord(record._id)}\r\n              key={record._id}\r\n            />\r\n          );\r\n        });\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <h3>Record List</h3>\r\n          <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Original Sentence</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{sentenceList()}</tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}