{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyang\\\\OneDrive\\\\Documents\\\\test\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport SentenceList from \"./sentenceList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(term) {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      var newRecords;\n      for (let i = 0; i < records.length; i++) {\n        if (records[i].includes(term)) {\n          newRecords = records[i];\n        }\n      }\n      setRecords(newRecords);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n  return /*#__PURE__*/_jsxDEV(SentenceList, {\n    records: records\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","SentenceList","Search","term","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","newRecords","i","length","includes"],"sources":["C:/Users/kyang/OneDrive/Documents/test/mern-stack-example/mern/client/src/components/search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport SentenceList from \"./sentenceList\";\r\n\r\nexport default function Search(term){\r\n    const [records, setRecords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n          const response = await fetch(`http://localhost:5000/record/`);\r\n    \r\n          if (!response.ok) {\r\n            const message = `An error occured: ${response.statusText}`;\r\n            window.alert(message);\r\n            return;\r\n          }\r\n    \r\n          const records = await response.json();\r\n          var newRecords;\r\n          for (let i = 0; i < records.length; i++) {\r\n            if (records[i].includes(term)){\r\n                newRecords = records[i];\r\n            }\r\n          }\r\n          setRecords(newRecords);\r\n        }\r\n    \r\n        getRecords();\r\n    \r\n        return; \r\n      }, [records.length]);\r\n\r\n    return (\r\n        <SentenceList records={records} />\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,eAAe,SAASC,MAAM,CAACC,IAAI,EAAC;EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,eAAeQ,UAAU,GAAG;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,CAAC;MAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,qBAAoBH,QAAQ,CAACI,UAAW,EAAC;QAC1DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMN,OAAO,GAAG,MAAMG,QAAQ,CAACO,IAAI,EAAE;MACrC,IAAIC,UAAU;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,OAAO,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,IAAIZ,OAAO,CAACY,CAAC,CAAC,CAACE,QAAQ,CAACf,IAAI,CAAC,EAAC;UAC1BY,UAAU,GAAGX,OAAO,CAACY,CAAC,CAAC;QAC3B;MACF;MACAX,UAAU,CAACU,UAAU,CAAC;IACxB;IAEAT,UAAU,EAAE;IAEZ;EACF,CAAC,EAAE,CAACF,OAAO,CAACa,MAAM,CAAC,CAAC;EAEtB,oBACI,QAAC,YAAY;IAAC,OAAO,EAAEb;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AAE1C;AAAC,GA/BuBF,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}